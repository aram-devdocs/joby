
# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "üîç Running pre-commit quality checks..."

# Run Prettier on staged files directly
echo "üé® Running Prettier on staged files..."
prettier $(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g') --write --ignore-unknown
git update-index --again

# Function to run checks in parallel
run_parallel_checks() {
  local pids=()
  local failed=0
  
  # Run lint-staged
  (
    echo "üìù Running lint-staged..."
    npx lint-staged
    echo $? > /tmp/lint-staged-status
  ) &
  pids+=($!)
  
  # Run type checking
  (
    echo "üîç Running type checks..."
    pnpm typecheck
    echo $? > /tmp/type-check-status
  ) &
  pids+=($!)
  
  # Check for console.log statements
  (
    echo "üö´ Checking for console.log statements..."
    files=$(git diff --cached --name-only | grep -E '\.(ts|tsx|js|jsx)$' || true)
    if [ -n "$files" ]; then
      if echo "$files" | xargs grep -l 'console\.log' 2>/dev/null; then
        echo -e "${RED}‚ùå Found console.log statements. Please remove them before committing.${NC}"
        echo 1 > /tmp/console-check-status
      else
        echo 0 > /tmp/console-check-status
      fi
    else
      echo 0 > /tmp/console-check-status
    fi
  ) &
  pids+=($!)
  
  # Check for TODO comments
  (
    echo "üìã Checking for TODO comments..."
    files=$(git diff --cached --name-only | grep -E '\.(ts|tsx|js|jsx)$' || true)
    if [ -n "$files" ]; then
      if echo "$files" | xargs grep -l 'TODO\|FIXME\|HACK' 2>/dev/null; then
        echo -e "${YELLOW}‚ö†Ô∏è  Found TODO/FIXME/HACK comments. Consider addressing them.${NC}"
      fi
    fi
  ) &
  pids+=($!)
  
  # Wait for all background jobs
  for pid in "${pids[@]}"; do
    wait "$pid"
  done
  
  # Check results
  [ -f /tmp/lint-staged-status ] && [ "$(cat /tmp/lint-staged-status)" != "0" ] && failed=1
  [ -f /tmp/type-check-status ] && [ "$(cat /tmp/type-check-status)" != "0" ] && failed=1
  [ -f /tmp/console-check-status ] && [ "$(cat /tmp/console-check-status)" != "0" ] && failed=1
  
  # Cleanup
  rm -f /tmp/lint-staged-status /tmp/type-check-status /tmp/console-check-status
  
  return $failed
}

# Run checks
if run_parallel_checks; then
  echo -e "${GREEN}‚úÖ All pre-commit checks passed!${NC}"
else
  echo -e "${RED}‚ùå Pre-commit checks failed. Please fix the issues above.${NC}"
  exit 1
fi
